swagger: "2.0"
info:
  title: Java Course Movie App API
  description: Sample Movie App AI
  version: 1.1.0
host: api.wsb.pl
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

definitions:
  Error:
    type: object
    properties:
      message:
        type: string
        description: Error message
    required:
      - message
    example:
      message: 'Sample error message.'

  RegisterUserRequest:
    type: object
    properties:
      email:
        type: string
        description: User email address
      password:
        type: string
        description: User password
    required:
      - email
      - password
    example:
      email: 'uzytkownik@java-course-wsb.pl'
      password: 'password1'

  User:
    type: object
    properties:
      id:
        type: integer
        description: User id
      email:
        type: string
        description: User email address
      status:
        type: boolean
        description: Account status
    required:
      - id
      - email
    example:
      id: 1
      email: 'uzytkownik@java-course-wsb.pl'
      status: true

  UserDeactivateRequest:
    type: object
    properties:
      id:
        type: integer
        description: User id
      status:
        type: boolean
        description: Account status
    required:
      - id
      - status
    example:
      id: 1
      status: false


  AuthenticationRequest:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
    example:
      email: 'uzytkownik@java-course-wsb.pl'
      password: 'password1'

  Actor:
    type: object
    properties:
      id:
        type: integer
        description: Actor id
      first_name:
        type: string
        description: Actor first name
      last_name:
        type: string
        description: Actor last name
      ratings:
        type: array
        items:
          type: object
          properties:
            movie:
              $ref: '#/definitions/Movie'
            rate:
              type: integer
              description: Rate in movie
    required:
      - id
      - first_name
      - last_name
    example:
      id: 1
      first_name: 'Jan'
      last_name: 'Nowak'
      ratings:
        - Movie_id: 1
          Rate: 7
        - Movie_id: 2
          Rate: 5

  Movie:
    type: object
    properties:
      id:
        type: integer
        description: Movie id
      genre:
        type: string
        enum:
          - Action
          - Comedy
          - Drama
          - Science fiction
          - Thriller
        description: Movie genre
      title:
        type: string
        description: Movie title
      rating:
        type: integer
        description: Movie rating
      year:
        type: string
        format: 'yyyy'
        description: Movie release year
      director:
        type: string
        description: Movie director
      actors:
        type: array
        items:
          $ref: '#/definitions/Actor'
      comments:
        type: array
        items:
          type: string
          description: Comment content
    required:
      - id
      - title
    example:
      id: 1
      genre: 'Science fiction'
      title: 'Gwiezdne wojny: Część IV - Nowa nadzieja'
      year: '1977'
      director: 'George Lucas'
      actors:
        - id: 1
          first_name: 'Mark'
          last_name: 'Hamilton'
        - id: 2
          first_name: 'Harrison'
          last_name: 'Ford'
        - id: 3
          first_name: 'Carrie'
          last_name: 'Fisher'

  MovieList:
    type: object
    properties:
      total:
        type: integer
        description: Movie list total items count
      data:
        type: array
        items:
          $ref: '#/definitions/Movie'
        description: One pagination page data
    required:
      - total
      - data
    example:
      total_count: 99
      data:
        - id: 1
          genre: 'Science fiction'
          title: 'Gwiezdne wojny: Część IV - Nowa nadzieja'
          year: '1977'
          director: 'George Lucas'
          actors:
            - id: 1
              first_name: 'Mark'
              last_name: 'Hamill'
            - id: 2
              first_name: 'Harrison'
              last_name: 'Ford'
            - id: 3
              first_name: 'Carrie'
              last_name: 'Fisher'
        - id: 1
          genre: 'Science fiction'
          title: 'Gwiezdne wojny: Część IV - Nowa nadzieja'
          year: '1977'
          director: 'George Lucas'
          actors:
            - id: 1
              first_name: 'Mark'
              last_name: 'Hamill'
            - id: 2
              first_name: 'Harrison'
              last_name: 'Ford'
            - id: 3
              first_name: 'Carrie'
              last_name: 'Fisher'
        - id: 1
          genre: 'Science fiction'
          title: 'Gwiezdne wojny: Część IV - Nowa nadzieja'
          year: '1977'
          director: 'George Lucas'
          actors:
            - id: 1
              first_name: 'Mark'
              last_name: 'Hamill'
            - id: 2
              first_name: 'Harrison'
              last_name: 'Ford'
            - id: 3
              first_name: 'Carrie'
              last_name: 'Fisher'

  MovieRatingRequest:
    type: object
    properties:
      movie_id:
        type: integer
        description: Movie to rate id
      rating:
        type: integer
        description: My rate
    required:
      - movie_id
      - rating
    example:
      movie_id: 1
      rating: 10

  MovieLibraryRequest:
    type: object
    properties:
      movie_id:
        type: integer
        description: Movie to rate id
      status:
        type: string
        enum:
          - 'Seen'
          - 'Want to see'
        description: My status for movie
    required:
      - movie_id
      - status
    example:
      movie_id: 1
      rating: 'Seen'

  MovieRequest:
    type: object
    properties:
      genre:
        type: string
        enum:
          - Action
          - Comedy
          - Drama
          - Science fiction
          - Thriller
        description: Movie genre
      title:
        type: string
        description: Movie title
      year:
        type: string
        format: 'yyyy'
        description: Movie release year
      director:
        type: string
        description: Movie director
    required:
      - genre
      - title
      - year
      - director
    example:
      genre: 'Science fiction'
      title: 'Gwiezdne wojny: Część IV - Nowa nadzieja'
      year: '1977'
      director: 'George Lucas'

  MovieActorRatingRequest:
    type: object
    properties:
      movie_id:
        type: integer
        description: Movie involving actor to rate id
      actor_id:
        type: integer
        description: Actor to rate
      rating:
        type: integer
        description: My rate
    required:
      - movie_id
      - actor_id
      - rating
    example:
      movie_id: 1
      actor_id: 1
      rating: 10

  MovieCommentRequest:
    type: object
    properties:
      movie_id:
        type: integer
        description: Movie to comment id
      comment:
        type: string
        description: My comment
    required:
      - movie_id
      - comment
    example:
      movie_id: 1
      comment: 'Great play'

paths:
  /user:
    post:
      summary: Register user.
      operationId: postUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: New user data
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegisterUserRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/User'
        400:
          description: Client error, e.g. unsifficient data
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error, e.g. unexpeected application exception
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Deactivate user.
      operationId: putUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Change user status
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserDeactivateRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/User'
        400:
          description: Client error, e.g. unsifficient data
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error, e.g. unexpeected application exception
          schema:
            $ref: '#/definitions/Error'


  /user/logout:
    post:
      summary: Logout user.
      operationId: postLogoutUser
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Successful logout
        400:
          description: Client error, e.g. unsifficient data
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error, e.g. unexpeected application exception
          schema:
            $ref: '#/definitions/Error'

  /authenticate:
    post:
      summary: Authenticate user.
      operationId: postAuthenticate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Credentials data.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AuthenticationRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/User'
        400:
          description: Client error, e.g. unsifficient data
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized error, e.g. bad credentials data
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error, e.g. unexpeected application exception
          schema:
            $ref: '#/definitions/Error'

  /movie:
    get:
      summary: >
        Getting movie list, filter data via query request params.
      operationId: getMovie
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Number of records to return
          in: query
          name: limit
          required: true
          type: integer
        - description: Initial index of records to return
          in: query
          name: offset
          required: true
          type: integer
        - description: Phrase to search
          in: query
          name: search
          required: false
          type: string
      responses:
        200:
          description: Movie list
          schema:
            type: array
            items:
              $ref: '#/definitions/MovieList'
        400:
          description: Client error, e.g. unsifficient data
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error, e.g. unexpeected application exception
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add movie.
      operationId: postMovie
      parameters:
        - description: New movie data.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MovieRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Movie'
        400:
          description: Client error, e.g. unsifficient data
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized error
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error, e.g. unexpeected application exception
          schema:
            $ref: '#/definitions/Error'

  /movie/rate:
    post:
      summary: Rate movie.
      operationId: postMovieRate
      parameters:
        - description: Movie rate.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MovieRatingRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Movie'
        400:
          description: Client error, e.g. unsifficient data
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized error
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error, e.g. unexpeected application exception
          schema:
            $ref: '#/definitions/Error'

  /movie/comment:
    post:
      summary: Comment movie.
      operationId: postMovieComment
      parameters:
        - description: Movie comment.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MovieCommentRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Movie'
        400:
          description: Client error, e.g. unsifficient data
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized error
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error, e.g. unexpeected application exception
          schema:
            $ref: '#/definitions/Error'

  /movie/{movie_id}/actor/{actor_id}/rate:
    post:
      summary: Rate actor
      operationId: postActorRate
      parameters:
        - description: Movie id
          in: path
          name: movie_id
          required: true
          type: integer
        - description: Actor id
          in: path
          name: actor_id
          required: true
          type: integer
        - description: Actor rate
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MovieActorRatingRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Movie'
        400:
          description: Client error, e.g. unsifficient data
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized error
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error, e.g. unexpeected application exception
          schema:
            $ref: '#/definitions/Error'

  /library:
    post:
      summary: Add movie to library.
      operationId: postLibrary
      parameters:
        - description: Movie library data.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MovieLibraryRequest'
      responses:
        204:
          description: Success
        400:
          description: Client error, e.g. unsifficient data
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized error
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error, e.g. unexpeected application exception
          schema:
            $ref: '#/definitions/Error'

  /movie/{id}/accept:
    put:
      summary: Accept pending movie request
      operationId: putMovieIdAccept
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Movie id
          in: path
          name: id
          required: true
          type: integer
      responses:
        204:
          description: Success
        400:
          description: Client error, e.g. unsifficient data
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized error
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden error
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error, e.g. unexpeected application exception
          schema:
            $ref: '#/definitions/Error'

  /movie/{id}/reject:
    put:
      summary: Reject pending movie request
      operationId: putMovieIdReject
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Movie id
          in: path
          name: id
          required: true
          type: integer
      responses:
        204:
          description: Success
        400:
          description: Client error, e.g. unsifficient data
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized error
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden error
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error, e.g. unexpeected application exception
          schema:
            $ref: '#/definitions/Error'
